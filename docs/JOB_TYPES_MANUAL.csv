타입,세부타입,설명,필수파라미터,선택파라미터,사용예시
do,click,요소를 클릭,focus,speed,"focus: {""xpath"": ""//button[@id='login']""}"
do,text,텍스트를 입력,"focus,text",speed,"focus: {""xpath"": ""//input[@name='username']""}, text: myuser"
do,clear,입력된 텍스트를 지움,focus,speed,"focus: {""xpath"": ""//input[@name='username']""}"
do,enter,엔터 키 입력,없음,없음,없음
do,pagedown,페이지 다운 키 입력,없음,없음,없음
do,radio,라디오 버튼이나 체크박스 선택,"focus,value",없음,"focus: {""xpath"": ""//input[@type='radio']""}, value: true"
do,scroll,페이지 스크롤,"sleep,max_time,speed_variation",없음,"sleep: 1, max_time: 10, speed_variation: 0.1"
do,scroll_to_element,특정 요소로 스크롤,"focus,sleep,speed,speed_variation,max_time",없음,"focus: {""xpath"": ""//div[@class='content']""}, sleep: 1, speed: 0.5, speed_variation: 0.1, max_time: 10"
find,id,ID 속성으로 요소 찾기,"find_item,find_range",없음,"find_item: main-content, find_range: first"
find,class,클래스 속성으로 요소 찾기,"find_item,find_range",없음,"find_item: title, find_range: first"
find,name,HTML 태그명으로 요소 찾기,"find_item,find_range",없음,"find_item: div, find_range: all"
find,text,텍스트 내용으로 요소 찾기,"find_item,find_range",없음,"find_item: 로그인, find_range: first"
find,attribute,특정 속성으로 요소 찾기,"find_attribute,find_item,find_range",없음,"find_attribute: data-id, find_item: 123, find_range: first"
data,to_html,Tag 객체를 HTML 문자열로 변환,"from,to",없음,"from: extracted_data, to: html_data"
data,to_xpath,Tag 객체를 XPath 문자열로 변환,"from,to",없음,"from: extracted_data, to: xpath_data"
data,to_dataframe,Tag 객체를 pandas DataFrame으로 변환,"from,to",없음,"from: extracted_data, to: df_data"
data,get_href,링크의 href 속성 추출,"from,to,href_arg",없음,"from: link_data, to: href_data, href_arg: https://"
data,get_hrefs,여러 링크의 href 속성들을 추출,"from,to,href_arg",없음,"from: links_data, to: hrefs_data, href_arg: https://"
data,get_text_all,요소의 모든 텍스트를 하나의 문자열로 추출,"from,to,text_arg",없음,"from: html_data, to: text_data, text_arg: \n"
data,get_texts_all,요소의 텍스트를 리스트로 분리하여 추출,"from,to,text_arg",없음,"from: html_data, to: texts_data, text_arg: \n"
data,get_text_all_tagonly,태그만 포함된 텍스트 추출,"from,to,text_arg",없음,"from: html_data, to: tag_text_data, text_arg: \n"
data,get_text_all_without_script,script 태그를 제외한 텍스트 추출,"from,to,text_arg",없음,"from: html_data, to: clean_text_data, text_arg: \n"
data,key_to_list,여러 키의 값들을 리스트로 변환,"to,key_count",key_0,key_1,... (키 개수에 따라),"to: combined_list, key_count: 3, key_0: data1, key_1: data2, key_2: data3"
request,get,URL로 GET 요청 보내기,url,없음,"url: https://example.com"
request,post,URL로 POST 요청 보내기,"url,data",없음,"url: https://api.example.com, data: {""username"": ""user"", ""password"": ""pass""}"
request,selenium,Selenium으로 웹페이지 접속,"url,wait_time",없음,"url: https://example.com, wait_time: 2"
save,excel,DataFrame을 Excel 파일로 저장,"save_type,to,name",encoding (무시됨),"save_type: excel, to: result_data, name: result.xlsx"
save,csv,DataFrame을 CSV 파일로 저장,"save_type,to,name",encoding,"save_type: csv, to: result_data, name: result.csv, encoding: utf-8"
save,txt,DataFrame을 TXT 파일로 저장,"save_type,to,name",encoding,"save_type: txt, to: result_data, name: result.txt, encoding: utf-8"
save,mysql,DataFrame을 MySQL 테이블로 저장,"save_type,to,name",encoding (무시됨),"save_type: mysql, to: result_data, name: crawl_results"
save,elasticsearch,DataFrame을 Elasticsearch 인덱스로 저장,"save_type,to,name",encoding (무시됨),"save_type: elasticsearch, to: result_data, name: crawl_index"
load,excel,Excel 파일을 DataFrame으로 로드,"load_type,from,name",encoding (무시됨),"load_type: excel, from: loaded_data, name: data.xlsx"
load,csv,CSV 파일을 DataFrame으로 로드,"load_type,from,name",encoding,"load_type: csv, from: loaded_data, name: data.csv, encoding: utf-8"
load,txt,TXT 파일을 DataFrame으로 로드,"load_type,from,name",encoding,"load_type: txt, from: loaded_data, name: data.txt, encoding: utf-8"
load,mysql,MySQL 테이블을 DataFrame으로 로드,"load_type,from,name",encoding (무시됨),"load_type: mysql, from: loaded_data, name: crawl_results"
load,elasticsearch,Elasticsearch 인덱스를 DataFrame으로 로드,"load_type,from,name",encoding (무시됨),"load_type: elasticsearch, from: loaded_data, name: crawl_index"
python,file,외부 Python 파일을 실행,"python_type,script_path,to,arg_count",from_0,from_1,... (인자 개수에 따라),"python_type: file, script_path: process_data.py, to: result, arg_count: 2, from_0: data1, from_1: data2"
python,code,페이지에서 직접 입력한 Python 코드를 실행,"python_type,code,to",없음,"python_type: code, code: print('Hello World'), to: result"
wait,fixed_time,지정된 시간만큼 대기,"wait_type,time",없음,"wait_type: fixed_time, time: 2.5"
wait,load_time,페이지 로딩이 완료될 때까지 대기 (구현 예정),wait_type,없음,"wait_type: load_time"
test,variable,변수를 저장하고 출력,"test_type,name,value",print_result,"test_type: variable, name: my_var, value: Hello World, print_result: true"
test,list,쉼표로 구분된 문자열을 리스트로 변환,"test_type,name,items",print_result,"test_type: list, name: my_list, items: apple,banana,orange, print_result: true"
test,dict,키:값 형태의 문자열을 딕셔너리로 변환,"test_type,name,key_value_pairs",print_result,"test_type: dict, name: my_dict, key_value_pairs: name:John,age:25,city:Seoul, print_result: true" 